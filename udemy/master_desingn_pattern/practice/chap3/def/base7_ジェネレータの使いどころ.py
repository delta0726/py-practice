# ******************************************************************************
# Course      : デザインパターン・マスター講座
# Chapter     : 3 Python基本文法講座
# Theme       : 45 ジェネレータ関数の使い道
# Creat Date  : 2022/2/5
# Final Update:
# URL         : https://www.udemy.com/course/python-mx/
# ******************************************************************************


# ＜ポイント＞
# - ジェネレータはメモリ使用量を削減するのに役立つ
#   --- DBから大量のレコードを逐次的に取り出すのが典型例（一括だとメモリを消費）
#   --- ただし、ジェネレータを用いると処理が遅いこともある点に注意


# ＜目的＞
# - コンソール上に1-100000の値を表示する
#   --- そのための変数をどのように定義するかにフォーカス


# ＜手段＞
# - 方法1： 変数に全ての値を生成して格納しておく
# - 方法2： ジェネレータで逐次的に生成する


# ライブラリ
import sys

# 変数定義（方法1）
# --- メモリ上に一括で定義している
list_a = [i for i in range(100000)]

# 処理
# --- 全ての値をコンソールに表示（今回の目的でないので省略）
# for i in range(len(list_a)):
#     print(list_a[i])


# ジェネレータ関数定義
def num(max):
    i = 0
    while i < max:
        yield i
        i += 1


# インスタンス生成
# --- この時点ではデータを生成していない
gen = num(100000)

# 処理
# --- 全ての値をコンソールに表示（今回の目的でないので省略）
# for x in gen:
#     print(x)


# メモリの確認
# --- ジェネレータの方がメモリ消費量が少ない
print(sys.getsizeof(list_a))
print(sys.getsizeof(gen))
