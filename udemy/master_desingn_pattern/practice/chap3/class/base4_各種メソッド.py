# ******************************************************************************
# Course      : デザインパターン・マスター講座
# Chapter     : 3 Python基本文法講座
# Theme       :
# Creat Date  : 2022//
# Final Update:
# URL         : https://www.udemy.com/course/python-mx/
# ******************************************************************************


# ＜概要＞
# - メソッドには｢インスタンスメソッド｣｢クラスメソッド｣｢スタティックメソッド｣の3種類がある


# ＜インスタンスメソッド＞
# - クラス内に定義される一般的なメソッド
# - 第1引数は必ず｢self｣となる
# - クラス変数とインスタンス変数の両方にアクセス可能


# ＜クラスメソッド＞
# - インスタンス化せずに使えるメソッド
# - メソッド名にはデコレータ(@classmethod)を付け、第1引数は必ず｢cls｣となる
# - クラス変数のみにアクセス可能（インスタンス生成を前提としないので、インスタンス変数は使えない）


# ＜スタティックメソッド＞
# - クラス内に定義されている点を除けば、単なる関数に近い
# - メソッド名にはデコレータ(@staticmethod)を付ける（第1引数に制約はない）
# - クラス変数もインスタンス変数もアクセス不可
# - クラス変数やインスタンス変数に全くアクセスする必要がない場合にそれを明示するために使用する


# ＜目次＞
# 1 クラス定義
# 2 クラス実行
# 3 インスタンス削除


# 1 クラス定義 ----------------------------------------------

class Human:
    # クラス変数
    class_name = "Human"

    # コンストラクタ
    def __init__(self, name, age):
        self.name = name
        self.age = age

    # インスタンスメソッド
    def print_name_age(self):
        print('インスタンスメソッド実行')
        print('name = {}, age = {}'.format(self.name, self.age))
        print(a)

    # クラスメソッド
    @classmethod
    def print_class_name(cls, msg):
        print('クラスメソッド実行')
        print(cls.class_name) # クラス変数
        print(msg)

    # スタティックメソッド
    @staticmethod
    def print_msg(msg):
        print('スタティックメソッド実行')
        print(msg)



# 2 クラスメソッドの実行 ---------------------------------------------------

# ＜ポイント＞
# - インスタンス生成なしに実行できる
# - クラス変数にアクセスすることができる（インスタンス変数はアクセス不可）
# - クラスメソッド自身も引数を持つことができる


# メソッド実行
Human.print_class_name(msg='こんにちは')


# 3 インスタンスメソッドの実行 ---------------------------------------------

# ＜ポイント＞
# - インスタンスを生成してから実行する
# - クラス変数とインスタンス変数にアクセスすることができる


# インスタンス
man = Human(name='桜木', age=18)

# メソッド実行
man.print_name_age()


# 4 スタティックメソッドの実行 --------------------------------------------

# ＜ポイント＞
# - インスタンスからもクラスからも実行することができる


# メソッド実行
man.print_msg('hello static')
Human.print_msg('hello static')
