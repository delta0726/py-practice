# ******************************************************************************
# Course      : Python3.8マスター講座
# Chapter     : 15 科学技術計算ライブラリ
# Theme       : 集合演算
# Creat Date  : 2022/2/18
# Final Update:
# URL         : https://www.udemy.com/course/python-python/
# ******************************************************************************


# ＜概要＞
# - 基本的な線形代数の演算を確認する


# ＜目次＞
# 0 準備
# 1 ユニーク要素の抽出
# 2 要素の存在チェック
# 3 集合演算


# 0 準備 ----------------------------------------------------------

# ライブラリ
import numpy as np


# 1 ユニーク要素の抽出 ----------------------------------------------

# ベクトルの場合
data = np.array([6, 1, 2, 3, 3, 3, 2, 1, 1, 4, 5])
print(np.unique(data))

# 行列の場合
# --- 出力結果はベクトル
data = np.array([[1, 1, 2], [3, 2, 2], [4, 5, 5]])
print(np.unique(data))


# 2 要素の存在チェック -----------------------------------------

# 配列作成
arr1 = np.array([0, 1, 2, 4, 3])
arr2 = np.array([4, 1])

# 要素の存在チェック
print(np.in1d(arr1, arr2))


# 3 集合演算 --------------------------------------------------

# 配列作成
arr1 = np.array([0, 1, 1, 3])
arr2 = np.array([1, 2, 2, 3])

# 両方に含まれている要素、重複削除、ソート
print(np.intersect1d(arr1, arr2))

# arr1にあって、arr2にない要素
print(np.setdiff1d(arr1, arr2))

# arr1, arr2のどちらかにある要素
print(np.setxor1d(arr1, arr2))

# arr1, arr2のユニオン,重複削除、ソート
print(np.union1d(arr1, arr2))
