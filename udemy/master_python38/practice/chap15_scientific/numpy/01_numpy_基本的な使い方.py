# ******************************************************************************
# Course      : Python3.8マスター講座
# Chapter     : 15 科学技術計算ライブラリ
# Theme       : numpy 基本的な使い方
# Creat Date  : 2022/2/12
# Final Update:
# URL         : https://www.udemy.com/course/python-python/
# ******************************************************************************


# ＜概要＞
# - numpyオブジェクトと基本操作を確認する


# ＜目次＞
# 0 準備
# 1 numpyオブジェクトの定義
# 2 オブジェクトのプロパティ
# 3 様々なオブジェクトの生成
# 4 乱数シードの固定
# 5 基本的な数学演算
# 6 行列の要素抽出


# 0 準備 ----------------------------------------------------------

# ライブラリ
import numpy as np


# 1 numpyオブジェクトの定義 -----------------------------------------

# ＜ポイント＞
# - numpyオブジェクトはリストに似ているが、高速計算用に設計されている
#   --- リストから変換することで作成するのが基本


# リストの作成
my_list = [1, 2, 3]

# numpyオブジェクトに変換
arr = np.array(my_list)

# 確認
print(arr)
print(type(arr))


# 2 オブジェクトのプロパティ -------------------------------------------------------

# データ作成
arr = np.array([1, 2, 3])

# 行列の行数と列数
print(arr.shape)

# 行列の次元
print(arr.ndim)

# データのタイプ
print(arr.dtype)

# 要素の数
print(arr.size)

# バイト数
print(arr.nbytes)


# 3 様々なオブジェクトの生成 ----------------------------------------------

# 連続値の数列作成
# --- 指定範囲の整数値の数列
arr = np.arange(0, 10)
print(arr)

# 連続値の数列作成
# --- 指定範囲の整数値でステップありの数列
print(np.arange(0, 10, 2))

# 等差数列の作成
# --- 0~1１まで10個区切り
print(np.linspace(0, 11, 10))

# 乱数の生成
# --- 乱数の範囲と生成する配列形状を指定する
print(np.random.randint(0, 3, (5, 5)))

# 一様乱数を生成する
# --- 0~1のランダム値
print(np.random.rand(5))

# 正規乱数を生成する
# --- 標準正規分布に基づくランダム値
print(np.random.randn(5))


# 4 乱数シードの固定 ----------------------------------------------

# ＜ポイント＞
# - 乱数シードを固定すると常に同じ乱数を得ることができる
#   --- 乱数シードは実行の都度固定しなければならない


# 乱数シードの固定
# --- 実行の度に乱数シードを指定する必要あり
np.random.seed(101)
arr1 = np.random.randint(0, 100, 5)
print(arr1)

# 乱数シードの固定なしで出力
# --- 異なる値が出力される
# --- 乱数シードは実行の都度指定する必要がある
arr2 = np.random.randint(0, 100, 5)
print(arr2)

# 乱数シードの固定して出力
np.random.seed(101)
arr3 = np.random.randint(0, 100, 5)
print(arr3)

# 乱数シードの固定して出力数を変えて出力
# --- 最初の部分は一致している
np.random.seed(101)
arr4 = np.random.randint(0, 100, 10)
print(arr4)


# 5 基本的な数学演算 ----------------------------------------------

# 配列の定義
arr = np.array([1, 2, 3, 4, 5, 6])

# 平均値
print(arr.mean())

# 最大値
print(arr.max())

# 最小値
print(arr.min())

# 最大値のインデックス
print(arr.argmax())

# 最小値のインデックス
print(arr.argmin())

# 行列数の変換
# --- 2行3列
print(arr.reshape(2, 3))


# 6 行列の要素抽出 ----------------------------------------------

# ＜ポイント＞
# - Pythonのインデックスは0から始まる点に注意


# 行列の定義
arr = np.arange(0, 9)
mat = arr.reshape(3, 3)
print(mat)

# 0行目のインデックス2
print(mat[0][2])

# 2行3列
print(mat[1, 2])

# 2行目
print(mat[1, :])

# 3列目
print(mat[:, 2])

print(mat[0, 1:2])

